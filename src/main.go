package main

import (
	"config"
	"fmt"
	"net/http"
	"view"
	"view/admin"

	mid "middleware"

	"github.com/labstack/echo"
	"github.com/labstack/echo/middleware"
	"github.com/swaggo/echo-swagger"
	validator "gopkg.in/go-playground/validator.v9"

	// docs is generated by Swag CLI, you have to import it.
	_ "docs"
)

// @title Swagger Example API
// @version 1.0
// @description This is a sample server Petstore server.
// @termsOfService http://swagger.io/terms/

// @contact.name API Support
// @contact.url http://www.swagger.io/support
// @contact.email support@swagger.io

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host petstore.swagger.io
// @BasePath /v2
func healthy(c echo.Context) error {

	return c.String(http.StatusOK, "hello world")
}

func main() {
	e := echo.New()

	e.Use(middleware.Logger())
	e.Use(middleware.Recover())
	// e.Use(middleware.JWTWithConfig(mid.DefaultJWTConfig))
	// e.Use(middleware.CSRFWithConfig(mid.DefaultCSRFConfig))
	//  against cross-site scripting (XSS) attack, content type sniffing, clickjacking, insecure connection and other code injection attacks
	// e.Use(middleware.Secure())
	// 参数验证器
	e.Validator = &mid.DefaultValidator{Validator: validator.New()}

	e.GET("/swagger/*", echoSwagger.WrapHandler)
	e.GET("/healthy", healthy)

	v1 := e.Group("/api/v1")
	view.InitIndexView(v1)
	user := v1.Group("/user")
	view.InitUserView(user)
	adminGroup := v1.Group("/admin")
	admin.InitAdminMemView(adminGroup)

	// 启动
	e.Logger.Fatal(e.Start(config.Conf.Addr))
	fmt.Println("启动")
}
